<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Jens Bäckbom</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2020-08-13T17:27:01+02:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Jens Bäckbom</name>
   <email>jens.backbom@gmail.com</email>
 </author>

 
 <entry>
   <title>The art of asking effective questions in various professions</title>
   <link href="http://localhost:4000/2020/07/20/asking-effective-questions/"/>
   <updated>2020-07-20T00:00:00+02:00</updated>
   <id>http://localhost:4000/2020/07/20/asking-effective-questions</id>
   <content type="html">&lt;p&gt;One might think that knowledge work depends on &lt;em&gt;knowing&lt;/em&gt; things, but often it’s actually about knowing how to &lt;em&gt;ask the right questions&lt;/em&gt;. In many professions this is a core skill you’ll need to learn from the start (eg. journalism, medicine, therapy), but as soon as you move into leadership roles you’ll find that asking questions takes up a lot of your time, no matter which profession you’re in. There are (at least) four hard things about asking questions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You want to make sure you’re asking the right question.&lt;/li&gt;
  &lt;li&gt;You can’t ask the exact question you want answered because you won’t get honest answers or you won’t know whom to ask.&lt;/li&gt;
  &lt;li&gt;You often have limited time to ask questions, so you need to be effective.&lt;/li&gt;
  &lt;li&gt;Sometimes, the important thing is not &lt;em&gt;what&lt;/em&gt; you ask, but &lt;em&gt;how much&lt;/em&gt; you ask or &lt;em&gt;when&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s see what effective questions might look like in various roles, situations and professions:&lt;/p&gt;

&lt;h3 id=&quot;as-someone-who-wants-to-start-a-company&quot;&gt;As someone who wants to start a company&lt;/h3&gt;
&lt;p&gt;Let’s start with a non-profession: A person who wants to start a company but who doesn’t have a business idea yet. I think the most important question to ask yourself is &lt;em&gt;why&lt;/em&gt; you want to start a company. You should ask yourself: &lt;em&gt;Do I want to become rich or do I want freedom?&lt;/em&gt; If you want to be rich, you’ll need to build something big, which means you’ll probably need external financing of some kind. However, having external investors removes a lot of the freedom. If you want to start a company to be your own boss, this is &lt;em&gt;not&lt;/em&gt; the path you should take.&lt;/p&gt;

&lt;p&gt;No matter which route you take (big or independent), most successful entrepreneurs I know took a two-step approach:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Try to think like a surfer and ask yourself: &lt;em&gt;Where will the next big wave show up?&lt;/em&gt; (where wave = market) Then try to put yourself in a position where you might take advantage of the wave. In my experience most of these waves tend to come from new technology or regulation.&lt;/li&gt;
  &lt;li&gt;Try to have open conversations with people in that market and ask them: &lt;em&gt;What things often frustrate you?&lt;/em&gt;. Stop once you’ve found five people who have the same problem that they desperately want a solution for. If they’re desperate, they will probably be very helpful when you try to solve the problem for them.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;as-a-startup-founder&quot;&gt;As a startup founder&lt;/h3&gt;
&lt;p&gt;Once you’ve started your company, you’ll want to know if you’re going after a real problem, and if so, if what you’re doing is actually solving it. The founders of Superhuman discovered one question that stood out in order to assess this. They would ask their users:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;How would you feel if you could no longer use the product?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and measure the percentage of users who would answer “Very disappointed”. This became their “product-market fit score”, where the magic threshold seems to be 40%. (Source: First Round Review)&lt;/p&gt;

&lt;p&gt;Another way of assessing your product-market fit might be to calculate a Net Promotor Score. This is done by asking your users:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;How likely is it that you would recommend our product to a friend or colleague?&lt;/em&gt; (Scale 0-10 where 10 is Extremely likely)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Research shows that the people answering 9 or 10 are the ones who will actually recommend you product - they are the &lt;em&gt;promotors&lt;/em&gt;. The people answering 7 or 8 are &lt;em&gt;passives&lt;/em&gt; and 0 to 6 are &lt;em&gt;detractors&lt;/em&gt;. Your Net promotor score is calculated as (number of promotors - number of detractors)/(total number of respondents) and can vary between -100 (only detractors) and +100 (only promotors). Generally, an NPS score of more than 50 is considered excellent.&lt;/p&gt;

&lt;h3 id=&quot;as-a-startup-investor&quot;&gt;As a startup investor&lt;/h3&gt;
&lt;p&gt;When investing in startups, most investments actually fail. Therefore, the few investments who are successful will need to compensate for the ones who fail, which is why startup investors will want every investment to have a huge potential. There are three main limits to a startup’s potential: The market, the founding team and their execution. Contrary to what many first-time startup founders think, the &lt;em&gt;idea&lt;/em&gt; is not that important since that will change over time. To assess the &lt;em&gt;market&lt;/em&gt;, you’ll want the answers to the following questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;How big is the current market for what the company is doing right now?&lt;/em&gt; If it’s not big enough, could the market be made bigger by segmenting, finding new target groups or selling adjacent products or services?&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;How fast is the market growing?&lt;/em&gt; It’s much easier to find a profitable segment for your company if the market is growing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To assess the &lt;em&gt;team&lt;/em&gt;, two questions stand out:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Are the team members intelligent?&lt;/em&gt; Starting a successful company means solving problems, and for that you need a combination of brain horsepower and street smarts. A certain “clarity of thought” often helps too.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Can they stand the grind?&lt;/em&gt; Running a startup is an emotional roller coaster, and not for the faint of heart. You will want to know if the team has the same level of ambition (extremely important) and if they can show examples of how they’ve handled difficult situations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To assess the &lt;em&gt;execution&lt;/em&gt;, it’s important to understand that many startups go up against big incumbents that they can never outspend. The only way to win when competing with an incumbent is to be &lt;em&gt;faster&lt;/em&gt;. Therefore, you will want a clear Yes! to the following question:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Am I impressed by what this small team has accomplished with their limited resources?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;as-a-salesperson&quot;&gt;As a salesperson&lt;/h3&gt;
&lt;p&gt;If you’re a salesperson, ultimately you want to know the answer to the questions &lt;em&gt;Who will become my customer?&lt;/em&gt; and &lt;em&gt;How much will they buy from me?&lt;/em&gt; If you knew the answers to these questions, you could more or less just sort them by contribution margin and start dialing. The problem is that this can be hard to find out, so you will inevitably need to talk to a lot of prospects that will end up not becoming your customers. The key thing for a salesperson is therefore to qualify their leads, i.e. to make sure that they spend as much time as possible with relevant customers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Does the customer need to solve the problem that our product can solve?&lt;/em&gt; Please note the focus on problem here, and google &lt;em&gt;Jobs to be done&lt;/em&gt; for more theory.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Is the person you are talking to allowed to spend money on solving the problem?&lt;/em&gt; If not, you might want to talk to one of their colleagues.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Does the customer have a budget allocated?&lt;/em&gt; If not, at least make sure they allocate money next year if they’re interested in your product.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;as-a-buyer&quot;&gt;As a buyer&lt;/h3&gt;
&lt;p&gt;If you work in procurement (ie. buying things for your organization), you might think that you should be asking questions about deliveries, contracts, price levels etc. However, the most effective question is often:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What do we actually need in order to do our job?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You might find that not everyone in your company who asks for a new computer, phone or car actually needs one in order to do their job. Similarly, you might be able to cut down on software that’s not being used, or downgrade SaaS licenses to plans with less features.&lt;/p&gt;

&lt;h3 id=&quot;as-a-recruiter&quot;&gt;As a recruiter&lt;/h3&gt;
&lt;p&gt;Hiring people is of course all about asking questions. What you really want to find out is &lt;em&gt;Is this candidate worth trying to hire?&lt;/em&gt; (Will they be able to do the job? Do they have potential beyond the current job scope? Does the candidate have better options than working for us?)
How can you assess all of this during a short interview? You can’t cover all aspects, of course. However, it will be really hard to predict the candidate’s future job performance if you spend the entire interview digging into one single question or case study. Instead, you’ll want to ask &lt;em&gt;as many different questions as possible&lt;/em&gt; during the interview. The reasoning behind this is that one big case study might overlap poorly with your skillset by accident, but if you fail on ten unrelated questions after each other you’re more likely to fail in a real work settings. An example: If you’re hiring developers you might want to try to spend the interview discussing several pre-made code examples instead of having the candidate write code (which takes much longer). A great blog post on this topic &lt;a href=&quot;https://erikbern.com/2018/05/02/interviewing-is-a-noisy-prediction-problem.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;as-a-software-developer&quot;&gt;As a software developer&lt;/h3&gt;
&lt;p&gt;The most important thing about asking questions as a software developer isn’t really &lt;em&gt;which&lt;/em&gt; questions to ask, but having the courage to &lt;em&gt;ask them sooner rather than later&lt;/em&gt;. One of the most rewarding things about developing software is solving problems, but the desire to solve them yourself can easily lead to a lot of wasted time. However, as long as you have actually tried to solve a problem, you’ll learn as much by asking someone for help as you would by solving it yourself. Sometimes it even helps explaining the problem to someone.&lt;/p&gt;

&lt;h3 id=&quot;as-a-ux-researcher&quot;&gt;As a UX researcher&lt;/h3&gt;
&lt;p&gt;If you are interviewing users of a product in order to learn about potential improvements, the key is to ask open-ended questions. You’ll want to avoid asking &lt;em&gt;Show me how you’d use the product to do X&lt;/em&gt;, because the user might not even be aware that you could use the product to do X! Instead, you’ll want to ask things such as &lt;em&gt;What do you use the product for?&lt;/em&gt; and &lt;em&gt;Can you show me how?&lt;/em&gt; Also, you might want to dig deeper into all thing you discover by asking &lt;em&gt;Why?&lt;/em&gt; several times. Google &lt;em&gt;The five whys&lt;/em&gt; for more info on this method.&lt;/p&gt;

&lt;h3 id=&quot;as-a-doctor&quot;&gt;As a doctor&lt;/h3&gt;
&lt;p&gt;I am not a doctor, so I won’t dive to deep into medical practice, but as I’ve understood it there is a big difference between being a primary care physician (where you meet one patient at a time and you’re not in a rush) and an emergency-care physician (where the patient might actually die within five minutes). As a primary-care physician, you’ll want to start high-level and ask open-ended questions, in order to find out things that you might want to dig deeper into. You’ll also want to make sure that the patient understood everything, and check whether they are actually using the medicine you prescribed last time. As an emergency-care physician, you want an immediate &lt;em&gt;triage&lt;/em&gt;: What is the emergency? What is the patient’s temperature, blood pressure, pulse rate and respiratory rate? These pieces of information will give you enough to prioritize the most urgent patients.&lt;/p&gt;

&lt;p&gt;Generally, I think this in an interesting distinction. In many professions you’ll be faced with urgent and non-urgent situations, and knowing how they differ and which questions are applicable to which situation can be very useful. It might make sense to build up a “panic checklist” of questions for emergencies, whereas you can afford to ask much more open-ended questions when you’re not in a rush.&lt;/p&gt;

&lt;h3 id=&quot;as-a-trial-lawyer&quot;&gt;As a trial lawyer&lt;/h3&gt;
&lt;p&gt;In trials, the jury tries to figure out beyond all reasonable doubt whether someone has committed a crime or not. As a defense lawyer, your job is therefore to create as much doubt as you can. This can be done by &lt;em&gt;asking many different questions&lt;/em&gt; and convince the jury that they need to have a clear answer to all of them before they can pass their verdict. This might be questions such as &lt;em&gt;Are we sure the witness can be trusted? (He was drunk, it was dark outside)&lt;/em&gt;, &lt;em&gt;Can we be sure that the victim died because of the drug, or because they had an existing medical condition?&lt;/em&gt; etc.&lt;/p&gt;

&lt;p&gt;On the other hand, if you want to convince the jury that the person is &lt;em&gt;guilty&lt;/em&gt;, you should try to simplify the case into one single question that feels easy to answer. For instance, in the current case about the death of George Floyd, such a question might be &lt;em&gt;Do you think a person can put their knee and weight on a man’s neck for 8 minutes and 46 seconds and not know they’re killing him?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;
&lt;p&gt;In many fields there are effective questions that will give you a proxy answer to the question you really want answered. It is not always about which questions to ask though. Sometimes it’s more important that you ask sooner rather than later, and sometimes you want to ask many questions rather than a few.&lt;/p&gt;

&lt;p&gt;Writing this essay really spurred my interest in effective questions. If you have any suggestions on how to improve it or want to connect in general, follow me on &lt;a href=&quot;http://www.twitter.com/jensbackbom/&quot;&gt;Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The next wave in higher education</title>
   <link href="http://localhost:4000/2020/07/15/the-next-wave-in-higher-education/"/>
   <updated>2020-07-15T00:00:00+02:00</updated>
   <id>http://localhost:4000/2020/07/15/the-next-wave-in-higher-education</id>
   <content type="html">&lt;p&gt;(please read through to the end)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Universities prepare students for a career in research, not for an actual job. We need to reform higher education in order to make graduates employable on the private market. These are some of my suggestions:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Free higher education for students of a state university so that they may accumulate new knowledge without spending unnecessary money on tuition fees.&lt;/li&gt;
  &lt;li&gt;Improve the quality of the education at state universities by forcing faculties to compete for students. Right now, the number of places at a university is fixed and departments do not need to be more attractive than others in order to attract students.&lt;/li&gt;
  &lt;li&gt;Offer students the freedom to enroll in more practical modules important for the labor market, like computer programming classes, office management, and team management.&lt;/li&gt;
  &lt;li&gt;Attempt to connect universities with industry or private organizations. IIT (Indian Institute of Technology) is successful in this field. This may be due to the fact that they grant patents to industry partners and share the profits with them. This is good for all parties and enriches the public sector.&lt;/li&gt;
  &lt;li&gt;Students of private universities receive government funding. This support is available regardless of the number of alumni from a university, thus offering smaller private universities the possibility to participate in the program.&lt;/li&gt;
  &lt;li&gt;Students of public universities divide their funding on research and for the exchange of information and new knowledge, which they then may share with society. This publication of research results is important in order to foster the competitiveness of market economy.&lt;/li&gt;
  &lt;li&gt;Government funding may be provided for master’s degrees in order to offer students more study places.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In conclusion, market-based reforms are needed in order to create new opportunities and prepare highly trained students for the private market. The quality of institutions will thus be on the rise, most students planning on an academic career will find employment, and salaries will be fulfilled.&lt;/p&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;p&gt;The above essay was written by GPT-3, the current state-of-the-art NLP algorithm developed by OpenAI. I fed it the headline and the introduction (in bold), the rest was all algorithm - I deleted some sentences and added punctuation but didn’t write a single word of it.&lt;/p&gt;

&lt;p&gt;Some of it doesn’t make any sense of course, but as an idea generator I think this technology could be extremely helpful. Imagine how hard it will be for teachers to grade papers written by this thing though.&lt;/p&gt;

&lt;p&gt;And imagine what it will do to your job.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href=&quot;http://www.twitter.com/jensbackbom/&quot;&gt;Twitter&lt;/a&gt; too see what I’m currently working on.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How we beat existing network effects and got 900 customers from day one</title>
   <link href="http://localhost:4000/2020/07/03/900-customers-from-day-one/"/>
   <updated>2020-07-03T00:00:00+02:00</updated>
   <id>http://localhost:4000/2020/07/03/900-customers-from-day-one</id>
   <content type="html">&lt;p&gt;In 2011 my company Benchmarking Alliance outmaneuvered a competitor that – in theory
– couldn’t be outmaneuvered due to network effects. Through a combination of the right
organization, product features, pricing and negotiation, we took over the Nordic market for hotel KPI benchmarking.&lt;/p&gt;

&lt;p&gt;Late 2009, I was doing consulting work for the Pricing and Distribution team at one of the
largest hotel chains in the Nordics. When the project was finished, the team mentioned that
they were dissatisfied with one of their software suppliers. “If you would build something
better”, they said, “we’ll become your customer tomorrow.”
The supplier was a US company (let’s call them “FTR”) which had recently
acquired a Swedish company (let’s call them “The Bunch”) in order to enter the European market. Our US competitor was
founded in 1985 and provided competitor benchmarks on a monthly basis to most hotel
chains in the US. Every month, hotels would send proprietary data such as last month’s
audited revenue figures to FTR and in exchange receive aggregated KPI benchmarks
(occupancy, average room rate and revenue per available room) for a selected group of
competitor hotels. Over time, FTR had become the de facto standard for hotel industry
metrics and the numbers were regularly used by financial institutions when assessing M&amp;amp;A
deals or expansion plans.&lt;/p&gt;

&lt;p&gt;The Bunch, on the other hand, was a Swedish company founded by hotel operators wanting
to optimize daily pricing decisions. Inspired by the success of yield management (dynamic
pricing based on customer demand) in the airline industry during the 1980s, hotels had
started to adopt their own version called revenue management during the late 1990s. In
order to measure the outcome of their pricing endeavors, they would need daily feedback on
whether they were accurately capturing customer demand. By launching a daily
benchmarking survey online in 2001 – using the same KPIs as FTR – The Bunch helped
hotels understand their daily performance and the company soon had customers all over
Europe.&lt;/p&gt;

&lt;p&gt;In 2007, The Bunch was acquired by FTR. However, merging the cultures of a company
operating on a monthly cycle (FTR) with one helping customers on a daily basis (The Bunch)
turned out to be hard and the Nordic customers (having all been early adopters of the
Swedish company) soon became dissatisfied with FTR’s lack of responsiveness to daily
operational questions.&lt;/p&gt;

&lt;p&gt;I did some further research and quickly found out that several Nordic hotel chains indeed felt
dissatisfied with FTR. However, the major problem was the network effects of the
benchmarking platform. As everyone was using the platform to get benchmarks based on
each other’s inputs, I kept hearing the same story from all hotel chains: “Sure, we would also
happily switch to another supplier, but only if everyone else switches too.”
This called for a bit of creativity.&lt;/p&gt;

&lt;p&gt;I managed to convince a friend with a legal degree and experience from the real estate
industry to join me and together with two former employees from The Bunch we co-founded
Benchmarking Alliance in June 2010. Our strategy to take over the Nordic market for hotel
KPI benchmarking involved a number of activities:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We first created an &lt;em&gt;MVP version&lt;/em&gt; of the platform based on interviews with key customers,
and made sure to focus on an attractive user interface as our competitor’s product was fairly
outdated. We paid special attention to requirements involving KPI definitions - if
we could get a critical mass of hotel chains to agree on new local definitions, our competitor
would probably not be able to respond since they were a global company and required
consistency between countries. Even though they weren’t yet customers, we managed to
persuade several hotel chains to try out the service and start sending us numbers in parallel
to our competitor. We also prepared for system integrations with all major property
management system providers.&lt;/li&gt;
  &lt;li&gt;During our initial talks with customers, we came up with a &lt;em&gt;pricing model&lt;/em&gt; where hotels paid a
yearly fee related to their number of rooms, which would attract independent hotels that were typically smaller than chain hotels.
Our competitor had been charging a fee related to the number of &lt;em&gt;hotels&lt;/em&gt; per customer, favoring hotel chains. By presenting a model
that was attractive to independent hotels, we could convince the chains that we would be
able to present better benchmarks (i.e. including more competitors) over time.&lt;/li&gt;
  &lt;li&gt;Finally, we established a network of &lt;em&gt;resellers&lt;/em&gt; in the Nordic countries, who spoke the local
language and would actively work to expand our market coverage. Even though these
resellers hadn’t begun selling yet, their very presence would strengthen our case a lot.
With these things in place, we invited the ten dominant hotel chains at the time to a
roundtable meeting in Oslo, where we told them: “You have all said that you will join our
service if all other hotel chains are on board as well. Can you say that again?”. Believing that
we had everything in place for a successful rollout of our service going forward, they all
confirmed their interest again. As they all now believed everyone would join us, we could
proceed with individual contract negotiations after the meeting. We were also able to tell
independent hotels that the chains would be leaving our competitor, more or less forcing
them to switch suppliers if they still wanted benchmarking data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The result was a zero-to-one launch of our business in Sweden, Norway and Denmark with
approximately 900 hotels becoming customers from start. We proceeded to secure
independent hotel participation in several small cities in order to get better
benchmarks for our biggest customers (a hotel in Stockholm doesn’t about the market in Stavanger and vice versa). This would make it increasingly hard for our competitor to take the market back.&lt;/p&gt;

&lt;p&gt;Our strategy has changed somewhat since then, but I think this shows that you can actually start a company in a market
dominated by a competitor even though there are network effects. I guess the generic strategy is to focus on a local niche (like Facebook did for Harvard graduates), a new platform (like Instagram did) or a new customer behavior (like Snap and TikTok did), and hopefully we can serve as an example that you can actually do it in a seemingly boring B2B niche market too.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href=&quot;http://www.twitter.com/jensbackbom/&quot;&gt;Twitter&lt;/a&gt; too see what I’m currently working on.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>You're gonna have to serve somebody</title>
   <link href="http://localhost:4000/2020/06/30/youre-gonna-have-to-serve-somebody/"/>
   <updated>2020-06-30T00:00:00+02:00</updated>
   <id>http://localhost:4000/2020/06/30/youre-gonna-have-to-serve-somebody</id>
   <content type="html">&lt;p&gt;It may be the devil or it may be the lord, but you’re gonna have to serve somebody.&lt;/p&gt;

&lt;p&gt;It may be &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Your blog readers&lt;/li&gt;
  &lt;li&gt;Your podcast listeners&lt;/li&gt;
  &lt;li&gt;Your 1 000 true fans&lt;/li&gt;
  &lt;li&gt;Your 25 000 followers&lt;/li&gt;
  &lt;li&gt;Your subreddit&lt;/li&gt;
  &lt;li&gt;Your book publisher&lt;/li&gt;
  &lt;li&gt;Your Substack newsletter subscribers&lt;/li&gt;
  &lt;li&gt;Your Gumroad e-book buyers&lt;/li&gt;
  &lt;li&gt;Your growth hacking course participants&lt;/li&gt;
  &lt;li&gt;Your mentees&lt;/li&gt;
  &lt;li&gt;Your yoga class &lt;/li&gt;
  &lt;li&gt;Your dataset&lt;/li&gt;
  &lt;li&gt;Your mortgage lender&lt;/li&gt;
  &lt;li&gt;Your virtual assistant&lt;/li&gt;
  &lt;li&gt;Your kids&lt;/li&gt;
  &lt;li&gt;Your investors&lt;/li&gt;
  &lt;li&gt;The journalists&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…or it may be your mind. But you’re gonna have to serve somebody.&lt;/p&gt;

&lt;p&gt;Credits to Bob Dylan. &lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href=&quot;http://www.twitter.com/jensbackbom/&quot;&gt;Twitter&lt;/a&gt; for more occasional cynicism.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hiring developers - lessons from screening 1000+ applications</title>
   <link href="http://localhost:4000/2020/06/25/hiring-developers/"/>
   <updated>2020-06-25T00:00:00+02:00</updated>
   <id>http://localhost:4000/2020/06/25/hiring-developers</id>
   <content type="html">&lt;p&gt;If you are a decent developer looking for a job you won’t have any problems whatsoever finding one. However, the opposite is true if you want to &lt;em&gt;hire&lt;/em&gt; developers (unless you’re Google or Spotify), especially if you’re not hiring a lot of them. Having worked with dozens of companies looking to hire tech talent, and having screened thousands of candidates as part of consulting gigs I have seen some approaches work better than others to find, attract and keep developers.&lt;/p&gt;

&lt;p&gt;To &lt;em&gt;find&lt;/em&gt; developers, there are hundreds of channels you can use and you’ll just have to test some of them. &lt;a href=&quot;http://www.stackoverflow.com/&quot;&gt;Stackoverflow.com&lt;/a&gt; is probably one of my favorites since you can target your specific tech stack there (If you’re looking for Python developers you can choose to have your ad displayed next to questions about python). If you’re fine with hiring remote talent, you might want to consider &lt;a href=&quot;https://weworkremotely.com/&quot;&gt;WeWorkRemotely&lt;/a&gt; or &lt;a href=&quot;https://remoteok.io/&quot;&gt;RemoteOK&lt;/a&gt; but I can’t vouch for them since I have mainly worked with remote freelancers rather than employees. I can recommend &lt;a href=&quot;https://wearefram.com/&quot;&gt;Fram&lt;/a&gt; specifically for Vietnamese tech talents though.&lt;/p&gt;

&lt;p&gt;To make developers &lt;em&gt;interested&lt;/em&gt; in you, these are some best practices that I’ve seen work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Describe some of the actual &lt;em&gt;problems&lt;/em&gt; you want solved, rather than just putting up a generic ad for a backend developer. Preferably you should mention open-ended problems (like &lt;em&gt;we need to pick a new frontend framework&lt;/em&gt;) as well as specific challenges (&lt;em&gt;we need integrations with Zapier and Airtable&lt;/em&gt;).&lt;/li&gt;
  &lt;li&gt;In as much detail as possible, tell them what’s unique about your company - but avoid cliches.&lt;/li&gt;
  &lt;li&gt;Describe your tech team (if there is one): Who would your candidate be working with? What products are you proud of, and why? Are there any specific technical challenges that you have overcome, and how?&lt;/li&gt;
  &lt;li&gt;Talk about the recruitment process: A professional process is not only a way to find the right people, it can also be critical for attracting the right people to begin with. If you know that you’re going to be properly assessed, that means that so were your future co-workers and therefore they are competent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To &lt;em&gt;assess their skills&lt;/em&gt;, you should try to understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Are they competent within their needed area of expertise? There are no shortcuts here - you need to see examples of their work. It can be code that they’ve written before (at work, or contributions to public github repos) or some kind of code test. Beware though - unless you’re certain that you have a strong employer brand, you should be cautious with giving assignments that require your candidates to spend hours of their free time. Instead, try to cover as much ground as possible during your interviews - one effective way is to show several short code snippets and ask your candidate questions about them: What language is this, what does the code do, why doesn’t it work etc.&lt;/li&gt;
  &lt;li&gt;Can they make strategic choices with regards to technology? This is more important if you’re in a startup where a lot of choices regarding your tech stack are yet to be made. Ask your candidate about earlier choices that he/she made!&lt;/li&gt;
  &lt;li&gt;Can they ask for help? Programming is a line of work where you can “get stuck” in ways that other professions can’t. Sometimes you just don’t know why your code doesn’t work, and you shouldn’t be afraid to ask for help once that happens. One (slightly evil) way of testing this might be to give an interview question where there’s a missing piece of information, and see if the candidate dares to ask for help.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you’ve hired them, these are some general tips to &lt;em&gt;retain&lt;/em&gt; your developers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Give them everything they need in terms of equipment: A great computer (don’t underspend here!), great software (let everyone work with their favorite tools as often as you can), a quiet room of their own (sitting in an office landscape together with eg. salespeople can be devastating) and a proper budget for courses, books and resources they might need to keep their skills up to date.&lt;/li&gt;
  &lt;li&gt;Make sure that there are always at least some interesting technical challenges to work with - this might be as simple as giving people responsability and avoiding micro-management.&lt;/li&gt;
  &lt;li&gt;Be an altogether great place to work, where developers as well as non-developers feel safe and are not afraid to speak their minds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These were some practical things to keep in mind when recruiting tech talent. Happy to hear your thoughts and comments on how this list can be expanded! (Easiest way is probably to follow me on &lt;a href=&quot;http://www.twitter.com/jensbackbom/&quot;&gt;Twitter&lt;/a&gt;) and send me a DM)&lt;/p&gt;
</content>
 </entry>
 

</feed>
